Index: src/main/java/apj/unicom/data/SqlQuery.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package apj.unicom.data;\n\npublic enum SqlQuery {\n    //UserCredentialDao\n    CHECK_STUDENT_ID(\"SELECT COUNT(*) FROM users WHERE student_id = ?\"),\n    CHECK_USER_PASS(\"SELECT COUNT(*) FROM users WHERE student_id = ? AND user_pass = ?\"),\n    REGISTER_USER(\"INSERT INTO users (\" +\n            \"student_id,\" +\n            \"user_name,\" +\n            \"isPublic, \" +\n            \"user_email,\" +\n            \"user_pass) VALUES (?,?,?,?,?)\"),\n\n    UPDATE_USER(\"UPDATE users (\" +\n            \"student_id,\" +\n            \"user_name,\" +\n            \"isPublic, \" +\n            \"user_email,\" +\n            \"user_pass) VALUES (?,?,?,?,?) WHERE student_id = ?\"),\n\n    //UserDao\n    GET_USER(\"SELECT user_id, student_id, user_name, isPublic, user_email FROM users WHERE student_id = ?\");\n\n    private final String query;\n\n    SqlQuery(String query) {\n        this.query = query;\n    }\n\n    public String getQuery() {\n        return query;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/apj/unicom/data/SqlQuery.java b/src/main/java/apj/unicom/data/SqlQuery.java
--- a/src/main/java/apj/unicom/data/SqlQuery.java	
+++ b/src/main/java/apj/unicom/data/SqlQuery.java	
@@ -19,7 +19,18 @@
             "user_pass) VALUES (?,?,?,?,?) WHERE student_id = ?"),
 
     //UserDao
-    GET_USER("SELECT user_id, student_id, user_name, isPublic, user_email FROM users WHERE student_id = ?");
+    GET_USER("SELECT user_id, student_id, user_name, isPublic, user_email FROM users WHERE student_id = ?"),
+    GET_USER_CHANNEL("SELECT * FROM channel WHERE " +
+                "channel_id IN (SELECT channel_id FROM channel_member WHERE user_id = ?) " +
+                "AND semester_id = (SELECT semester_id FROM semester WHERE is_current = true)"),
+
+    //ChannelDao
+    GET_CHANNEL("SELECT * FROM channel WHERE channel_id = ?"),
+    GET_CHANNEL_MEMBERS("SELECT user_id, student_id, user_name, isPublic, user_email FROM users WHERE " +
+            "user_id IN (SELECT user_id FROM channel_member WHERE channel_id = ?)"),
+
+    //CourseDao
+    GET_COURSE("SELECT * FROM courses WHERE course_id = ?");
 
     private final String query;
 
Index: src/main/java/apj/unicom/implement/dao/UserDaoImp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package apj.unicom.implement.dao;\n\nimport apj.unicom.dao.UserDao;\nimport apj.unicom.data.SqlQuery;\nimport apj.unicom.domain.User;\nimport org.springframework.jdbc.core.JdbcTemplate;\n\nimport javax.sql.DataSource;\n\npublic class UserDaoImp implements UserDao {\n    final private JdbcTemplate jdbcTemplate;\n\n    public UserDaoImp(DataSource dataSource){\n        this.jdbcTemplate = new JdbcTemplate(dataSource);\n    }\n\n    @Override\n    public User getUser(String studentId) {\n        return jdbcTemplate.queryForObject(\n                SqlQuery.GET_USER.getQuery(),\n                ((rs, rowNum) -> new User(\n                        rs.getInt(\"user_id\"),\n                        rs.getString(\"student_id\"),\n                        rs.getString(\"user_name\"),\n                        rs.getBoolean(\"isPublic\"),\n                        rs.getString(\"user_email\")\n                )),\n                studentId);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/apj/unicom/implement/dao/UserDaoImp.java b/src/main/java/apj/unicom/implement/dao/UserDaoImp.java
--- a/src/main/java/apj/unicom/implement/dao/UserDaoImp.java	
+++ b/src/main/java/apj/unicom/implement/dao/UserDaoImp.java	
@@ -1,11 +1,15 @@
 package apj.unicom.implement.dao;
 
 import apj.unicom.dao.UserDao;
+import apj.unicom.data.Response;
 import apj.unicom.data.SqlQuery;
+import apj.unicom.domain.Channel;
 import apj.unicom.domain.User;
 import org.springframework.jdbc.core.JdbcTemplate;
 
 import javax.sql.DataSource;
+import java.util.ArrayList;
+import java.util.List;
 
 public class UserDaoImp implements UserDao {
     final private JdbcTemplate jdbcTemplate;
@@ -16,7 +20,7 @@
 
     @Override
     public User getUser(String studentId) {
-        return jdbcTemplate.queryForObject(
+        User user = jdbcTemplate.queryForObject(
                 SqlQuery.GET_USER.getQuery(),
                 ((rs, rowNum) -> new User(
                         rs.getInt("user_id"),
@@ -26,5 +30,31 @@
                         rs.getString("user_email")
                 )),
                 studentId);
+        user.setChannels(getUserChannels(user.getUserId()));
+        return user;
+    }
+
+    @Override
+    public ArrayList<Channel> getUserChannels(int userId) {
+        List<Channel> channels = jdbcTemplate.query(
+                SqlQuery.GET_USER_CHANNEL.getQuery(),
+                ((rs, rowNum) -> new Channel(
+                        rs.getInt("channel_id"),
+                        rs.getString("channel_section"),
+                        rs.getInt("course_id"),
+                        rs.getString("semester_id")
+                )),
+                userId);
+        return channels.isEmpty() ? new ArrayList<>() : new ArrayList<>(channels);
+    }
+
+    @Override
+    public Response leaveChannel(int userId, int channelId) {
+        return null;
+    }
+
+    @Override
+    public Response joinChannel(int userId, int channelId) {
+        return null;
     }
 }
Index: src/main/java/apj/unicom/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package apj.unicom;\n\nimport apj.unicom.view.LoginView;\n\nimport javax.swing.*;\n\npublic class App {\n    public static void main( String[] args ) {\n        SwingUtilities.invokeLater(LoginView::new);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/apj/unicom/App.java b/src/main/java/apj/unicom/App.java
--- a/src/main/java/apj/unicom/App.java	
+++ b/src/main/java/apj/unicom/App.java	
@@ -1,11 +1,32 @@
 package apj.unicom;
 
+import apj.unicom.dao.UserDao;
+import apj.unicom.domain.Channel;
+import apj.unicom.domain.User;
+import apj.unicom.implement.dao.UserDaoImp;
 import apj.unicom.view.LoginView;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
 
 import javax.swing.*;
+import java.util.ArrayList;
 
 public class App {
     public static void main( String[] args ) {
+        ApplicationContext applicationContext = new ClassPathXmlApplicationContext("application-context.xml");
+        UserDao userDao = applicationContext.getBean("userDao", UserDaoImp.class);
+        User user = userDao.getUser("19-41468-3");
+        System.out.println(user);
+        //print all user info
+        System.out.println(user.getUserId());
+        System.out.println(user.getStudentId());
+        System.out.println(user.getUserName());
+        System.out.println(user.isPublic());
+        System.out.println(user.getUserEmail());
+        for(Channel channel : user.getChannels()){
+            System.out.println(channel.getCourse().getCourseName());
+        }
+
         SwingUtilities.invokeLater(LoginView::new);
     }
 }
Index: src/main/java/apj/unicom/domain/Channel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package apj.unicom.domain;\n\npublic class Channel {\n    private int channelId;\n    private String channelSection;\n    private int courseId;\n    private int semesterId;\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/apj/unicom/domain/Channel.java b/src/main/java/apj/unicom/domain/Channel.java
--- a/src/main/java/apj/unicom/domain/Channel.java	
+++ b/src/main/java/apj/unicom/domain/Channel.java	
@@ -1,10 +1,85 @@
 package apj.unicom.domain;
 
+import apj.unicom.dao.ChannelDao;
+import apj.unicom.dao.CourseDao;
+import apj.unicom.implement.dao.ChannelDaoImp;
+import apj.unicom.implement.dao.CourseDaoImp;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+
+import java.util.ArrayList;
+
 public class Channel {
     private int channelId;
     private String channelSection;
     private int courseId;
-    private int semesterId;
+    private String semesterId;
+
+    private Course course;
+    private ArrayList<User> members;
+
+    public Channel() {
+    }
+
+    public Channel(int channelId, String channelSection, int courseId, String semesterId) {
+        this.channelId = channelId;
+        this.channelSection = channelSection;
+        this.courseId = courseId;
+        this.semesterId = semesterId;
+
+        ApplicationContext applicationContext = new ClassPathXmlApplicationContext("application-context.xml");
+        ChannelDao channelDao = applicationContext.getBean("channelDao", ChannelDaoImp.class);
+        CourseDao courseDao = applicationContext.getBean("courseDao", CourseDaoImp.class);
+
+        this.members = channelDao.getChannelMembers(channelId);
+        this.course = courseDao.getCourse(courseId);
+    }
+
+    public int getChannelId() {
+        return channelId;
+    }
+
+    public void setChannelId(int channelId) {
+        this.channelId = channelId;
+    }
 
+    public String getChannelSection() {
+        return channelSection;
+    }
 
+    public void setChannelSection(String channelSection) {
+        this.channelSection = channelSection;
+    }
+
+    public int getCourseId() {
+        return courseId;
+    }
+
+    public void setCourseId(int courseId) {
+        this.courseId = courseId;
+    }
+
+    public String getSemesterId() {
+        return semesterId;
+    }
+
+    public void setSemesterId(String semesterId) {
+        this.semesterId = semesterId;
+    }
+
+    public Course getCourse() {
+        return course;
+    }
+
+    public void setCourse(Course course) {
+        this.course = course;
+    }
+
+    public ArrayList<User> getMembers() {
+        return members;
+    }
+
+    public void setMembers(ArrayList<User> members) {
+        this.members = members;
+    }
 }
Index: src/main/java/apj/unicom/implement/dao/ChannelDaoImp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/apj/unicom/implement/dao/ChannelDaoImp.java b/src/main/java/apj/unicom/implement/dao/ChannelDaoImp.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/apj/unicom/implement/dao/ChannelDaoImp.java	
@@ -0,0 +1,50 @@
+package apj.unicom.implement.dao;
+
+import apj.unicom.dao.ChannelDao;
+import apj.unicom.data.Response;
+import apj.unicom.data.SqlQuery;
+import apj.unicom.domain.Channel;
+import apj.unicom.domain.User;
+import org.springframework.jdbc.core.JdbcTemplate;
+
+import javax.sql.DataSource;
+import java.util.ArrayList;
+import java.util.List;
+
+public class ChannelDaoImp implements ChannelDao {
+    JdbcTemplate jdbcTemplate;
+
+    public ChannelDaoImp(DataSource dataSource){
+        this.jdbcTemplate = new JdbcTemplate(dataSource);
+    }
+
+    @Override
+    public Response addChannel(int courseId, String channelSection) {
+        return null;
+    }
+
+    @Override
+    public Channel getChannel(int channelId) {
+        return null;
+    }
+
+    @Override
+    public Channel searchChannel(int courseId, String channelSection) {
+        return null;
+    }
+
+    @Override
+    public ArrayList<User> getChannelMembers(int channelId) {
+        List<User> members = jdbcTemplate.query(
+                SqlQuery.GET_CHANNEL_MEMBERS.getQuery(),
+                ((rs, rowNum) -> new User(
+                        rs.getInt("user_id"),
+                        rs.getString("student_id"),
+                        rs.getString("user_name"),
+                        rs.getBoolean("isPublic"),
+                        rs.getString("user_email")
+                )),
+                channelId);
+        return members.isEmpty() ? new ArrayList<>() : new ArrayList<>(members);
+    }
+}
\ No newline at end of file
Index: src/main/java/apj/unicom/dao/UserDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package apj.unicom.dao;\n\nimport apj.unicom.domain.User;\n\npublic interface UserDao {\n    User getUser(String studentId);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/apj/unicom/dao/UserDao.java b/src/main/java/apj/unicom/dao/UserDao.java
--- a/src/main/java/apj/unicom/dao/UserDao.java	
+++ b/src/main/java/apj/unicom/dao/UserDao.java	
@@ -1,7 +1,14 @@
 package apj.unicom.dao;
 
+import apj.unicom.data.Response;
+import apj.unicom.domain.Channel;
 import apj.unicom.domain.User;
 
+import java.util.ArrayList;
+
 public interface UserDao {
     User getUser(String studentId);
+    ArrayList<Channel> getUserChannels(int userId);
+    Response leaveChannel(int userId, int channelId);
+    Response joinChannel(int userId, int channelId);
 }
Index: src/main/resources/application-context.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\">\n\n    <bean id=\"dataSource\" class=\"com.mysql.cj.jdbc.MysqlDataSource\">\n        <property name=\"databaseName\" value=\"unicom\"/>\n        <property name=\"url\" value=\"jdbc:mysql://localhost:3306/unicom\" />\n        <property name=\"user\" value=\"root\"/>\n        <property name=\"password\" value=\"root\" />\n    </bean>\n\n    <bean id=\"userCredentialDao\" class=\"apj.unicom.implement.dao.UserCredentialDaoImp\">\n        <constructor-arg ref=\"dataSource\"/>\n    </bean>\n\n    <bean id=\"userDao\" class=\"apj.unicom.implement.dao.UserDaoImp\">\n        <constructor-arg ref=\"dataSource\"/>\n    </bean>\n\n    <bean id=\"userCredential\" class=\"apj.unicom.domain.UserCredential\">\n        <constructor-arg name=\"emailDomain\" value=\"student.aiub.edu\"/>\n    </bean>\n\n    <bean id=\"userCredentialService\" class=\"apj.unicom.implement.service.UserCredentialServiceImp\">\n        <constructor-arg ref=\"userCredential\"/>\n        <constructor-arg name=\"userNameLength\" value=\"2\"/>\n        <constructor-arg name=\"userPassLength\" value=\"5\"/>\n        <constructor-arg name=\"studentIdFormat\" value=\"[0-9]{2}-[0-9]{5}-[1-3]{1}\"/>\n    </bean>\n\n</beans>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/application-context.xml b/src/main/resources/application-context.xml
--- a/src/main/resources/application-context.xml	
+++ b/src/main/resources/application-context.xml	
@@ -29,4 +29,12 @@
         <constructor-arg name="studentIdFormat" value="[0-9]{2}-[0-9]{5}-[1-3]{1}"/>
     </bean>
 
+    <bean id="channelDao" class="apj.unicom.implement.dao.ChannelDaoImp">
+        <constructor-arg ref="dataSource"/>
+    </bean>
+
+    <bean id="courseDao" class="apj.unicom.implement.dao.CourseDaoImp">
+        <constructor-arg ref="dataSource"/>
+    </bean>
+
 </beans>
\ No newline at end of file
Index: src/main/java/apj/unicom/implement/dao/CourseDaoImp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/apj/unicom/implement/dao/CourseDaoImp.java b/src/main/java/apj/unicom/implement/dao/CourseDaoImp.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/apj/unicom/implement/dao/CourseDaoImp.java	
@@ -0,0 +1,33 @@
+package apj.unicom.implement.dao;
+
+import apj.unicom.dao.CourseDao;
+import apj.unicom.data.SqlQuery;
+import apj.unicom.domain.Course;
+import org.springframework.jdbc.core.JdbcTemplate;
+
+import javax.sql.DataSource;
+import java.util.ArrayList;
+
+public class CourseDaoImp implements CourseDao {
+    JdbcTemplate jdbcTemplate;
+
+    public CourseDaoImp(DataSource dataSource){
+        this.jdbcTemplate = new JdbcTemplate(dataSource);
+    }
+
+    @Override
+    public Course getCourse(int courseId) {
+        return jdbcTemplate.queryForObject(
+                SqlQuery.GET_COURSE.getQuery(),
+                (rs, rowNum) -> new Course(
+                        rs.getInt("course_id"),
+                        rs.getString("course_name"),
+                        rs.getString("course_code")),
+                courseId);
+    }
+
+    @Override
+    public ArrayList<Course> searchCourse(String searchKey) {
+        return null;
+    }
+}
Index: src/main/java/apj/unicom/domain/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package apj.unicom.domain;\n\npublic class User {\n    private int userId;\n    private String studentId;\n    private String userName;\n    private boolean isPublic;\n    private String userEmail;\n\n    public User(){ }\n\n    public User(int userId, String studentId, String userName, boolean isPublic, String userEmail) {\n        this.userId = userId;\n        this.studentId = studentId;\n        this.userName = userName;\n        this.isPublic = isPublic;\n        this.userEmail = userEmail;\n    }\n\n    public int getUserId() {\n        return userId;\n    }\n\n    public void setUserId(int userId) {\n        this.userId = userId;\n    }\n\n    public String getStudentId() {\n        return studentId;\n    }\n\n    public void setStudentId(String studentId) {\n        this.studentId = studentId;\n    }\n\n    public String getUserName() {\n        return userName;\n    }\n\n    public void setUserName(String userName) {\n        this.userName = userName;\n    }\n\n    public boolean isPublic() {\n        return isPublic;\n    }\n\n    public void setPublic(boolean aPublic) {\n        isPublic = aPublic;\n    }\n\n    public String getUserEmail() {\n        return userEmail;\n    }\n\n    public void setUserEmail(String userEmail) {\n        this.userEmail = userEmail;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/apj/unicom/domain/User.java b/src/main/java/apj/unicom/domain/User.java
--- a/src/main/java/apj/unicom/domain/User.java	
+++ b/src/main/java/apj/unicom/domain/User.java	
@@ -1,5 +1,7 @@
 package apj.unicom.domain;
 
+import java.util.ArrayList;
+
 public class User {
     private int userId;
     private String studentId;
@@ -7,6 +9,8 @@
     private boolean isPublic;
     private String userEmail;
 
+    private ArrayList<Channel> channels;
+
     public User(){ }
 
     public User(int userId, String studentId, String userName, boolean isPublic, String userEmail) {
@@ -15,6 +19,7 @@
         this.userName = userName;
         this.isPublic = isPublic;
         this.userEmail = userEmail;
+        channels = new ArrayList<>();
     }
 
     public int getUserId() {
@@ -56,4 +61,12 @@
     public void setUserEmail(String userEmail) {
         this.userEmail = userEmail;
     }
+
+    public ArrayList<Channel> getChannels() {
+        return channels;
+    }
+
+    public void setChannels(ArrayList<Channel> channels) {
+        this.channels = channels;
+    }
 }
Index: src/main/java/apj/unicom/dao/ChannelDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package apj.unicom.dao;\n\nimport apj.unicom.data.Response;\nimport apj.unicom.domain.Channel;\n\npublic interface ChannelDao {\n    public Response  addChannel(Channel channel);\n    public Channel getChannel(int channelId);\n    public Channel[] getAllChannels();\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/apj/unicom/dao/ChannelDao.java b/src/main/java/apj/unicom/dao/ChannelDao.java
--- a/src/main/java/apj/unicom/dao/ChannelDao.java	
+++ b/src/main/java/apj/unicom/dao/ChannelDao.java	
@@ -2,9 +2,13 @@
 
 import apj.unicom.data.Response;
 import apj.unicom.domain.Channel;
+import apj.unicom.domain.User;
+
+import java.util.ArrayList;
 
 public interface ChannelDao {
-    public Response  addChannel(Channel channel);
-    public Channel getChannel(int channelId);
-    public Channel[] getAllChannels();
+    Response addChannel(int courseId, String channelSection);
+    Channel getChannel(int channelId);
+    Channel searchChannel(int courseId, String channelSection);
+    ArrayList<User> getChannelMembers(int channelId);
 }
